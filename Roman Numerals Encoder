/*
Create a function taking a positive integer as its parameter and returning 
a string containing the Roman Numeral representation of that integer.

Modern Roman numerals are written by expressing each digit separately starting 
with the left most digit and skipping any digit with a value of zero. In Roman numerals 1990 is rendered: 
1000=M, 900=CM, 90=XC; resulting in MCMXC. 2008 is written as 2000=MM, 8=VIII; or MMVIII. 
1666 uses each Roman symbol in descending order: MDCLXVI.

Example:

solution(1000); // should return 'M'
Help:

Symbol    Value
I          1
V          5
X          10
L          50
C          100
D          500
M          1,000
Remember that there can't be more than 3 identical symbols in a row.

More about roman numerals - http://en.wikipedia.org/wiki/Roman_numerals
*/
function solution(number){
  console.log(number) ;
 var num, q,w,e,r,t,y,u,i,o,p,k="";
function s(num, q,w,e,r,t,y,u,i,o,p){
  
switch (num)
 {
      case '1':   k+=q ;break; 
      case '2':   k+=w ;break;
      case '3':   k+=e ;break;
      case '4':   k+=r ;break;
      case '5':   k+=t ;break;
      case '6':   k+=y ;break;
      case '7':   k+=u ;break;
      case '8':   k+=i ;break;
      case '9':   k+=o ;break;
      case '0':   k+=p ;break;
  }
}
    number=Array.from(String(number));
    for(var j=0; j<number.length ;j++)
        {
        
          
       if(number.length===4){   
         switch (j)
      {
          case 0: s(number[j] ,'M','MM','MMM','','','','','','','')                     ;break;          
          case 1: s(number[j] ,'C','CC','CCC','CD','D','DC','DCC','DCCC','CM','')       ;break;
          case 2: s(number[j] ,'X','XX','XXX','XL','L','LX','LXX','LXXX','XC','')       ;break;
          case 3: s(number[j] ,'I','II','III','IV','V','VI','VII','VIII','IX','')       ;break;
      } 
     }
           else
             if(number.length===3){   
         switch (j)
      {
          
          case 0: s(number[j] ,'C','CC','CCC','CD','D','DC','DCC','DCCC','CM','')       ;break;
          case 1: s(number[j] ,'X','XX','XXX','XL','L','LX','LXX','LXXX','XC','')       ;break;
          case 2: s(number[j] ,'I','II','III','IV','V','VI','VII','VIII','IX','')       ;break;
      } 
     }
           else
             if(number.length===2){   
         switch (j)
      {
          case 0: s(number[j] ,'X','XX','XXX','XL','L','LX','LXX','LXXX','XC','')       ;break;
          case 1: s(number[j] ,'I','II','III','IV','V','VI','VII','VIII','IX','')       ;break;
      } 
     }
          else
             if(number.length===1){   
        
          s(number[j] ,'I','II','III','IV','V','VI','VII','VIII','IX','');
      
     }
          
    }
   return k;
  }
